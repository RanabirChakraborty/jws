---
- name: Read the content of catalina.out
  ansible.builtin.slurp:
    src: "{{ jws_home }}/{{ catalina_logfile }}"
  register: catalina_out

- name: "Count number of characters in {{ catalina_logfile }}"
  ansible.builtin.set_fact:
    nb_chars_in_catalina_log: "{{ catalina_out['content'] | b64decode | length }}"

- name: "Check that {{ catalina_logfile }} is not empty."
  ansible.builtin.assert:
    that:
      - nb_chars_in_catalina_log is defined
      - nb_chars_in_catalina_log | int > jws_validation_catalina_out_min_size
    quiet: True

- name: Fail if logfile contains ERRORs
  ansible.builtin.assert:
    that:
      - "{{ 'SEVERE' not in catalina_out.content }}"
    quiet: true
    fail_msg: "Catalina logfile contains SEVERE error lines."

- name: "Test JWS specific features"
  block:

    - name: Fail if native is installed but fails to start
      ansible.builtin.assert:
        that:
          - "{{ 'Loaded Apache Tomcat Native library' in catalina_out.content | b64decode }}"
        quiet: true
        fail_msg: "Tomcat native extensions failed to load."
      when:
        - jws_native is defined
        - jws_native

    - name: "Check that ModCluster Listener is loaded (if enabled)."
      ansible.builtin.assert:
        that:
          - catalina_out['content'] | b64decode | regex_findall('Initializing mod_cluster version', multiline=True) | length != 0
        success_msg: "ModCluster Listener is loaded."
        fail_msg: "ModCluster listener is not loaded!"
      when:
        - jws_modcluster_enabled is defined
        - jws_modcluster_enabled
  when:
    - jws_version is defined
